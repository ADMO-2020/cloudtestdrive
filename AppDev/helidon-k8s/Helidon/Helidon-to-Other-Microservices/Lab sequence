Rest Clients
============
Can easily access the backend service by creating your own REST requests, but can be painful
Look at the StockManager interface, it defined the rest client
In Storefront set the StockManager to be @Inject and @RestClient (no need to remove the setup for the dummy if it's still there
as @Inject will "overwrite" it)
Runtime will auto create an implementation that does all of the work.
Note we still program to the interface, and treat it as an object !
Things like the URL to use can be set in the interface (option to the @RegisterRestClient annotation) or you can get the details 
from the properties, in this case the @RegisterRestClient say sto use properties under the StockManager key, if it's not set then 
the classname is used. The properties here are in resources/META-INF/microprofile-config.properties


Use postman to test getting stock and reserving items, this goes from the storefront to the stockmanager
curl -X GET -u jill:password http://localhost:8080/store/stockLevel

Important point, the @Authenticated on the storefront means that it will automatically pass on any authentication information it 
has received when making subsequent REST calls to the stockmanager, we don't need to do anything specific like extracting the 
authentication information and packing it into the downstream call. Nice eh ?

